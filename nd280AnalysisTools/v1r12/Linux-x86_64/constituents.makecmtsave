
#-- start of constituents_header ------

include ${CMTROOT}/src/Makefile.core

ifdef tag
CMTEXTRATAGS = $(tag)
else
tag       = $(CMTCONFIG)
endif

tags      = $(tag),$(CMTEXTRATAGS)

nd280AnalysisTools_tag = $(tag)

ifdef READONLY
cmt_local_tagfile = /tmp/CMT_$(nd280AnalysisTools_tag).make$(cmt_lock_pid)
else
#cmt_local_tagfile = $(nd280AnalysisTools_tag).make
cmt_local_tagfile = $(bin)$(nd280AnalysisTools_tag).make
endif

#-include $(cmt_local_tagfile)
include $(cmt_local_tagfile)

ifdef READONLY
cmt_local_setup = /tmp/CMT_nd280AnalysisToolssetup$(cmt_lock_pid).make
cmt_final_setup = /tmp/CMT_nd280AnalysisToolssetup.make
else
#cmt_local_setup = $(bin)nd280AnalysisToolssetup$(cmt_lock_pid).make
cmt_local_setup = $(bin)$(package)setup$$$$.make
#cmt_final_setup = $(bin)nd280AnalysisToolssetup.make
cmt_final_setup = $(bin)$(package)setup.make
endif

#--------------------------------------------------------

#cmt_lock_setup = /tmp/lock$(cmt_lock_pid).make
#cmt_temp_tag = /tmp/tag$(cmt_lock_pid).make

#first :: $(cmt_local_tagfile)
#	@echo $(cmt_local_tagfile) ok
ifndef QUICK
first :: $(cmt_final_setup) ;
else
first :: ;
endif

##	@bin=`$(cmtexe) show macro_value bin`

#$(cmt_local_tagfile) : $(cmt_lock_setup)
#	@echo "#CMT> Error: $@: No such file" >&2; exit 1
$(cmt_local_tagfile) :
	@echo "#CMT> Warning: $@: No such file" >&2; exit
#	@echo "#CMT> Info: $@: No need to rebuild file" >&2; exit

$(cmt_final_setup) : $(cmt_local_tagfile) 
	$(echo) "(constituents.make) Rebuilding $@"
	@if test ! -d $(@D); then $(mkdir) -p $(@D); fi; \
	  if test -f $(cmt_local_setup); then /bin/rm -f $(cmt_local_setup); fi; \
	  trap '/bin/rm -f $(cmt_local_setup)' 0 1 2 15; \
	  $(cmtexe) -tag=$(tags) show setup >>$(cmt_local_setup); \
	  if test ! -f $@; then \
	    mv $(cmt_local_setup) $@; \
	  else \
	    if /usr/bin/diff $(cmt_local_setup) $@ >/dev/null ; then \
	      : ; \
	    else \
	      mv $(cmt_local_setup) $@; \
	    fi; \
	  fi

#	@/bin/echo $@ ok   

config :: checkuses
	@exit 0
checkuses : ;

env.make ::
	printenv >env.make.tmp; $(cmtexe) check files env.make.tmp env.make

ifndef QUICK
all :: build_library_links
	$(echo) "(constituents.make) all done"
endif

javadirs ::
	@if test ! -d $(javabin) ; then $(mkdir) -p $(javabin) ; fi

srcdirs ::
	@if test ! -d $(src) ; then $(mkdir) -p $(src) ; fi

dirs ::
	@if test ! -r requirements ; then echo "No requirements file" ; fi; \
	  if test ! -d $(bin) ; then $(mkdir) -p $(bin) ; fi

build_library_links : dirs requirements
	$(echo) "(constituents.make) Rebuilding library links"; \
	if test ! -d $(bin) ; then $(mkdir) -p $(bin) ; fi; \
	$(build_library_links)

.DEFAULT ::
	$(echo) "(constituents.make) $@: No rule for such target" >&2
#	@echo "#CMT> Warning: $@: Using default commands" >&2; exit

#	@if test "$@" = "$(cmt_lock_setup)"; then \
	#  /bin/rm -f $(cmt_lock_setup); \
	 # touch $(cmt_lock_setup); \
	#fi

#-- end of constituents_header ------
#-- start of group ------

all_groups :: all

all :: $(all_dependencies)  $(all_pre_constituents) $(all_constituents)  $(all_post_constituents)
	$(echo) "all ok."

#	@/bin/echo " all ok."

clean :: allclean

allclean ::  $(all_constituentsclean)
	$(echo) $(all_constituentsclean)
	$(echo) "allclean ok."

#	@echo $(all_constituentsclean)
#	@/bin/echo " allclean ok."

allclean :: makefilesclean

#-- end of group ------
#-- start of group ------

all_groups :: cmt_actions

cmt_actions :: $(cmt_actions_dependencies)  $(cmt_actions_pre_constituents) $(cmt_actions_constituents)  $(cmt_actions_post_constituents)
	$(echo) "cmt_actions ok."

#	@/bin/echo " cmt_actions ok."

clean :: allclean

cmt_actionsclean ::  $(cmt_actions_constituentsclean)
	$(echo) $(cmt_actions_constituentsclean)
	$(echo) "cmt_actionsclean ok."

#	@echo $(cmt_actions_constituentsclean)
#	@/bin/echo " cmt_actionsclean ok."

cmt_actionsclean :: makefilesclean

#-- end of group ------
#-- start of group ------

all_groups :: applications

applications :: $(applications_dependencies)  $(applications_pre_constituents) $(applications_constituents)  $(applications_post_constituents)
	$(echo) "applications ok."

#	@/bin/echo " applications ok."

clean :: allclean

applicationsclean ::  $(applications_constituentsclean)
	$(echo) $(applications_constituentsclean)
	$(echo) "applicationsclean ok."

#	@echo $(applications_constituentsclean)
#	@/bin/echo " applicationsclean ok."

applicationsclean :: makefilesclean

#-- end of group ------
#-- start of group ------

all_groups :: documentation

documentation :: $(documentation_dependencies)  $(documentation_pre_constituents) $(documentation_constituents)  $(documentation_post_constituents)
	$(echo) "documentation ok."

#	@/bin/echo " documentation ok."

clean :: allclean

documentationclean ::  $(documentation_constituentsclean)
	$(echo) $(documentation_constituentsclean)
	$(echo) "documentationclean ok."

#	@echo $(documentation_constituentsclean)
#	@/bin/echo " documentationclean ok."

documentationclean :: makefilesclean

#-- end of group ------
#-- start of constituent ------

cmt_Stage2GasSelection_has_target_tag = 1

#--------------------------------------------------------

ifdef cmt_Stage2GasSelection_has_target_tag

ifdef READONLY
cmt_local_tagfile_Stage2GasSelection = /tmp/CMT_$(nd280AnalysisTools_tag)_Stage2GasSelection.make$(cmt_lock_pid)
cmt_final_setup_Stage2GasSelection = /tmp/CMT_nd280AnalysisTools_Stage2GasSelectionsetup.make
cmt_local_Stage2GasSelection_makefile = /tmp/CMT_Stage2GasSelection$(cmt_lock_pid).make
else
#cmt_local_tagfile_Stage2GasSelection = $(nd280AnalysisTools_tag)_Stage2GasSelection.make
cmt_local_tagfile_Stage2GasSelection = $(bin)$(nd280AnalysisTools_tag)_Stage2GasSelection.make
cmt_final_setup_Stage2GasSelection = $(bin)nd280AnalysisTools_Stage2GasSelectionsetup.make
cmt_local_Stage2GasSelection_makefile = $(bin)Stage2GasSelection.make
endif

Stage2GasSelection_extratags = -tag_add=target_Stage2GasSelection

#$(cmt_local_tagfile_Stage2GasSelection) : $(cmt_lock_setup)
ifndef QUICK
$(cmt_local_tagfile_Stage2GasSelection) ::
else
$(cmt_local_tagfile_Stage2GasSelection) :
endif
	$(echo) "(constituents.make) Rebuilding setup.make $(cmt_local_tagfile_Stage2GasSelection)"
	@if test -f $(cmt_local_tagfile_Stage2GasSelection); then /bin/rm -f $(cmt_local_tagfile_Stage2GasSelection); fi ; \
	  $(cmtexe) -tag=$(tags) $(Stage2GasSelection_extratags) build tag_makefile >>$(cmt_local_tagfile_Stage2GasSelection); \
	  if test -f $(cmt_final_setup_Stage2GasSelection); then /bin/rm -f $(cmt_final_setup_Stage2GasSelection); fi; \
	  $(cmtexe) -tag=$(tags) $(Stage2GasSelection_extratags) show setup >>$(cmt_final_setup_Stage2GasSelection)
	$(echo) setup.make ok

else

ifdef READONLY
cmt_local_tagfile_Stage2GasSelection = /tmp/CMT_$(nd280AnalysisTools_tag).make$(cmt_lock_pid)
cmt_final_setup_Stage2GasSelection = /tmp/CMT_nd280AnalysisToolssetup.make
cmt_local_Stage2GasSelection_makefile = /tmp/CMT_Stage2GasSelection$(cmt_lock_pid).make
else
#cmt_local_tagfile_Stage2GasSelection = $(nd280AnalysisTools_tag).make
cmt_local_tagfile_Stage2GasSelection = $(bin)$(nd280AnalysisTools_tag).make
cmt_final_setup_Stage2GasSelection = $(bin)nd280AnalysisToolssetup.make
cmt_local_Stage2GasSelection_makefile = $(bin)Stage2GasSelection.make
endif

endif

ifndef QUICK
$(cmt_local_Stage2GasSelection_makefile) :: $(Stage2GasSelection_dependencies) $(cmt_local_tagfile_Stage2GasSelection) build_library_links dirs
else
$(cmt_local_Stage2GasSelection_makefile) :: $(cmt_local_tagfile_Stage2GasSelection)
endif
	$(echo) "(constituents.make) Building Stage2GasSelection.make"; \
	  $(cmtexe) -tag=$(tags) $(Stage2GasSelection_extratags) build constituent_makefile -out=$(cmt_local_Stage2GasSelection_makefile) Stage2GasSelection

Stage2GasSelection :: $(Stage2GasSelection_dependencies) $(cmt_local_Stage2GasSelection_makefile)
	$(echo) "(constituents.make) Starting Stage2GasSelection"
	@$(MAKE) -f $(cmt_local_Stage2GasSelection_makefile) cmt_lock_pid=$${cmt_lock_pid} Stage2GasSelection
	$(echo) "(constituents.make) Stage2GasSelection done"

clean :: Stage2GasSelectionclean

Stage2GasSelectionclean :: $(Stage2GasSelectionclean_dependencies) ##$(cmt_local_Stage2GasSelection_makefile)
	$(echo) "(constituents.make) Starting Stage2GasSelectionclean"
	@-if test -f $(cmt_local_Stage2GasSelection_makefile); then \
	  $(MAKE) -f $(cmt_local_Stage2GasSelection_makefile) cmt_lock_pid=$${cmt_lock_pid} Stage2GasSelectionclean; \
	fi

##	  /bin/rm -f $(cmt_local_Stage2GasSelection_makefile) $(bin)Stage2GasSelection_dependencies.make

install :: Stage2GasSelectioninstall

Stage2GasSelectioninstall :: $(Stage2GasSelection_dependencies) $(cmt_local_Stage2GasSelection_makefile)
	$(echo) "(constituents.make) Starting install Stage2GasSelection"
	@-$(MAKE) -f $(cmt_local_Stage2GasSelection_makefile) cmt_lock_pid=$${cmt_lock_pid} install
	$(echo) "(constituents.make) install Stage2GasSelection done"

uninstall :: Stage2GasSelectionuninstall

Stage2GasSelectionuninstall :: $(cmt_local_Stage2GasSelection_makefile)
	$(echo) "(constituents.make) Starting uninstall Stage2GasSelection"
	@-$(MAKE) -f $(cmt_local_Stage2GasSelection_makefile) cmt_lock_pid=$${cmt_lock_pid} uninstall
	$(echo) "(constituents.make) uninstall Stage2GasSelection done"

ifndef PEDANTIC
.DEFAULT::
	$(echo) "(constituents.make) Starting $@ Stage2GasSelection"
	$(echo) Using default action for $@
	$(echo) "(constituents.make) $@ Stage2GasSelection done"
endif


#-- end of constituent ------
#-- start of constituent ------

cmt_TPCPOTCalculator_has_target_tag = 1

#--------------------------------------------------------

ifdef cmt_TPCPOTCalculator_has_target_tag

ifdef READONLY
cmt_local_tagfile_TPCPOTCalculator = /tmp/CMT_$(nd280AnalysisTools_tag)_TPCPOTCalculator.make$(cmt_lock_pid)
cmt_final_setup_TPCPOTCalculator = /tmp/CMT_nd280AnalysisTools_TPCPOTCalculatorsetup.make
cmt_local_TPCPOTCalculator_makefile = /tmp/CMT_TPCPOTCalculator$(cmt_lock_pid).make
else
#cmt_local_tagfile_TPCPOTCalculator = $(nd280AnalysisTools_tag)_TPCPOTCalculator.make
cmt_local_tagfile_TPCPOTCalculator = $(bin)$(nd280AnalysisTools_tag)_TPCPOTCalculator.make
cmt_final_setup_TPCPOTCalculator = $(bin)nd280AnalysisTools_TPCPOTCalculatorsetup.make
cmt_local_TPCPOTCalculator_makefile = $(bin)TPCPOTCalculator.make
endif

TPCPOTCalculator_extratags = -tag_add=target_TPCPOTCalculator

#$(cmt_local_tagfile_TPCPOTCalculator) : $(cmt_lock_setup)
ifndef QUICK
$(cmt_local_tagfile_TPCPOTCalculator) ::
else
$(cmt_local_tagfile_TPCPOTCalculator) :
endif
	$(echo) "(constituents.make) Rebuilding setup.make $(cmt_local_tagfile_TPCPOTCalculator)"
	@if test -f $(cmt_local_tagfile_TPCPOTCalculator); then /bin/rm -f $(cmt_local_tagfile_TPCPOTCalculator); fi ; \
	  $(cmtexe) -tag=$(tags) $(TPCPOTCalculator_extratags) build tag_makefile >>$(cmt_local_tagfile_TPCPOTCalculator); \
	  if test -f $(cmt_final_setup_TPCPOTCalculator); then /bin/rm -f $(cmt_final_setup_TPCPOTCalculator); fi; \
	  $(cmtexe) -tag=$(tags) $(TPCPOTCalculator_extratags) show setup >>$(cmt_final_setup_TPCPOTCalculator)
	$(echo) setup.make ok

else

ifdef READONLY
cmt_local_tagfile_TPCPOTCalculator = /tmp/CMT_$(nd280AnalysisTools_tag).make$(cmt_lock_pid)
cmt_final_setup_TPCPOTCalculator = /tmp/CMT_nd280AnalysisToolssetup.make
cmt_local_TPCPOTCalculator_makefile = /tmp/CMT_TPCPOTCalculator$(cmt_lock_pid).make
else
#cmt_local_tagfile_TPCPOTCalculator = $(nd280AnalysisTools_tag).make
cmt_local_tagfile_TPCPOTCalculator = $(bin)$(nd280AnalysisTools_tag).make
cmt_final_setup_TPCPOTCalculator = $(bin)nd280AnalysisToolssetup.make
cmt_local_TPCPOTCalculator_makefile = $(bin)TPCPOTCalculator.make
endif

endif

ifndef QUICK
$(cmt_local_TPCPOTCalculator_makefile) :: $(TPCPOTCalculator_dependencies) $(cmt_local_tagfile_TPCPOTCalculator) build_library_links dirs
else
$(cmt_local_TPCPOTCalculator_makefile) :: $(cmt_local_tagfile_TPCPOTCalculator)
endif
	$(echo) "(constituents.make) Building TPCPOTCalculator.make"; \
	  $(cmtexe) -tag=$(tags) $(TPCPOTCalculator_extratags) build constituent_makefile -out=$(cmt_local_TPCPOTCalculator_makefile) TPCPOTCalculator

TPCPOTCalculator :: $(TPCPOTCalculator_dependencies) $(cmt_local_TPCPOTCalculator_makefile)
	$(echo) "(constituents.make) Starting TPCPOTCalculator"
	@$(MAKE) -f $(cmt_local_TPCPOTCalculator_makefile) cmt_lock_pid=$${cmt_lock_pid} TPCPOTCalculator
	$(echo) "(constituents.make) TPCPOTCalculator done"

clean :: TPCPOTCalculatorclean

TPCPOTCalculatorclean :: $(TPCPOTCalculatorclean_dependencies) ##$(cmt_local_TPCPOTCalculator_makefile)
	$(echo) "(constituents.make) Starting TPCPOTCalculatorclean"
	@-if test -f $(cmt_local_TPCPOTCalculator_makefile); then \
	  $(MAKE) -f $(cmt_local_TPCPOTCalculator_makefile) cmt_lock_pid=$${cmt_lock_pid} TPCPOTCalculatorclean; \
	fi

##	  /bin/rm -f $(cmt_local_TPCPOTCalculator_makefile) $(bin)TPCPOTCalculator_dependencies.make

install :: TPCPOTCalculatorinstall

TPCPOTCalculatorinstall :: $(TPCPOTCalculator_dependencies) $(cmt_local_TPCPOTCalculator_makefile)
	$(echo) "(constituents.make) Starting install TPCPOTCalculator"
	@-$(MAKE) -f $(cmt_local_TPCPOTCalculator_makefile) cmt_lock_pid=$${cmt_lock_pid} install
	$(echo) "(constituents.make) install TPCPOTCalculator done"

uninstall :: TPCPOTCalculatoruninstall

TPCPOTCalculatoruninstall :: $(cmt_local_TPCPOTCalculator_makefile)
	$(echo) "(constituents.make) Starting uninstall TPCPOTCalculator"
	@-$(MAKE) -f $(cmt_local_TPCPOTCalculator_makefile) cmt_lock_pid=$${cmt_lock_pid} uninstall
	$(echo) "(constituents.make) uninstall TPCPOTCalculator done"

ifndef PEDANTIC
.DEFAULT::
	$(echo) "(constituents.make) Starting $@ TPCPOTCalculator"
	$(echo) Using default action for $@
	$(echo) "(constituents.make) $@ TPCPOTCalculator done"
endif


#-- end of constituent ------
#-- start of constituent ------

cmt_PrintECalActiveBBs_has_target_tag = 1

#--------------------------------------------------------

ifdef cmt_PrintECalActiveBBs_has_target_tag

ifdef READONLY
cmt_local_tagfile_PrintECalActiveBBs = /tmp/CMT_$(nd280AnalysisTools_tag)_PrintECalActiveBBs.make$(cmt_lock_pid)
cmt_final_setup_PrintECalActiveBBs = /tmp/CMT_nd280AnalysisTools_PrintECalActiveBBssetup.make
cmt_local_PrintECalActiveBBs_makefile = /tmp/CMT_PrintECalActiveBBs$(cmt_lock_pid).make
else
#cmt_local_tagfile_PrintECalActiveBBs = $(nd280AnalysisTools_tag)_PrintECalActiveBBs.make
cmt_local_tagfile_PrintECalActiveBBs = $(bin)$(nd280AnalysisTools_tag)_PrintECalActiveBBs.make
cmt_final_setup_PrintECalActiveBBs = $(bin)nd280AnalysisTools_PrintECalActiveBBssetup.make
cmt_local_PrintECalActiveBBs_makefile = $(bin)PrintECalActiveBBs.make
endif

PrintECalActiveBBs_extratags = -tag_add=target_PrintECalActiveBBs

#$(cmt_local_tagfile_PrintECalActiveBBs) : $(cmt_lock_setup)
ifndef QUICK
$(cmt_local_tagfile_PrintECalActiveBBs) ::
else
$(cmt_local_tagfile_PrintECalActiveBBs) :
endif
	$(echo) "(constituents.make) Rebuilding setup.make $(cmt_local_tagfile_PrintECalActiveBBs)"
	@if test -f $(cmt_local_tagfile_PrintECalActiveBBs); then /bin/rm -f $(cmt_local_tagfile_PrintECalActiveBBs); fi ; \
	  $(cmtexe) -tag=$(tags) $(PrintECalActiveBBs_extratags) build tag_makefile >>$(cmt_local_tagfile_PrintECalActiveBBs); \
	  if test -f $(cmt_final_setup_PrintECalActiveBBs); then /bin/rm -f $(cmt_final_setup_PrintECalActiveBBs); fi; \
	  $(cmtexe) -tag=$(tags) $(PrintECalActiveBBs_extratags) show setup >>$(cmt_final_setup_PrintECalActiveBBs)
	$(echo) setup.make ok

else

ifdef READONLY
cmt_local_tagfile_PrintECalActiveBBs = /tmp/CMT_$(nd280AnalysisTools_tag).make$(cmt_lock_pid)
cmt_final_setup_PrintECalActiveBBs = /tmp/CMT_nd280AnalysisToolssetup.make
cmt_local_PrintECalActiveBBs_makefile = /tmp/CMT_PrintECalActiveBBs$(cmt_lock_pid).make
else
#cmt_local_tagfile_PrintECalActiveBBs = $(nd280AnalysisTools_tag).make
cmt_local_tagfile_PrintECalActiveBBs = $(bin)$(nd280AnalysisTools_tag).make
cmt_final_setup_PrintECalActiveBBs = $(bin)nd280AnalysisToolssetup.make
cmt_local_PrintECalActiveBBs_makefile = $(bin)PrintECalActiveBBs.make
endif

endif

ifndef QUICK
$(cmt_local_PrintECalActiveBBs_makefile) :: $(PrintECalActiveBBs_dependencies) $(cmt_local_tagfile_PrintECalActiveBBs) build_library_links dirs
else
$(cmt_local_PrintECalActiveBBs_makefile) :: $(cmt_local_tagfile_PrintECalActiveBBs)
endif
	$(echo) "(constituents.make) Building PrintECalActiveBBs.make"; \
	  $(cmtexe) -tag=$(tags) $(PrintECalActiveBBs_extratags) build constituent_makefile -out=$(cmt_local_PrintECalActiveBBs_makefile) PrintECalActiveBBs

PrintECalActiveBBs :: $(PrintECalActiveBBs_dependencies) $(cmt_local_PrintECalActiveBBs_makefile)
	$(echo) "(constituents.make) Starting PrintECalActiveBBs"
	@$(MAKE) -f $(cmt_local_PrintECalActiveBBs_makefile) cmt_lock_pid=$${cmt_lock_pid} PrintECalActiveBBs
	$(echo) "(constituents.make) PrintECalActiveBBs done"

clean :: PrintECalActiveBBsclean

PrintECalActiveBBsclean :: $(PrintECalActiveBBsclean_dependencies) ##$(cmt_local_PrintECalActiveBBs_makefile)
	$(echo) "(constituents.make) Starting PrintECalActiveBBsclean"
	@-if test -f $(cmt_local_PrintECalActiveBBs_makefile); then \
	  $(MAKE) -f $(cmt_local_PrintECalActiveBBs_makefile) cmt_lock_pid=$${cmt_lock_pid} PrintECalActiveBBsclean; \
	fi

##	  /bin/rm -f $(cmt_local_PrintECalActiveBBs_makefile) $(bin)PrintECalActiveBBs_dependencies.make

install :: PrintECalActiveBBsinstall

PrintECalActiveBBsinstall :: $(PrintECalActiveBBs_dependencies) $(cmt_local_PrintECalActiveBBs_makefile)
	$(echo) "(constituents.make) Starting install PrintECalActiveBBs"
	@-$(MAKE) -f $(cmt_local_PrintECalActiveBBs_makefile) cmt_lock_pid=$${cmt_lock_pid} install
	$(echo) "(constituents.make) install PrintECalActiveBBs done"

uninstall :: PrintECalActiveBBsuninstall

PrintECalActiveBBsuninstall :: $(cmt_local_PrintECalActiveBBs_makefile)
	$(echo) "(constituents.make) Starting uninstall PrintECalActiveBBs"
	@-$(MAKE) -f $(cmt_local_PrintECalActiveBBs_makefile) cmt_lock_pid=$${cmt_lock_pid} uninstall
	$(echo) "(constituents.make) uninstall PrintECalActiveBBs done"

ifndef PEDANTIC
.DEFAULT::
	$(echo) "(constituents.make) Starting $@ PrintECalActiveBBs"
	$(echo) Using default action for $@
	$(echo) "(constituents.make) $@ PrintECalActiveBBs done"
endif


#-- end of constituent ------
#-- start of constituent_lock ------

cmt_dictionary_has_no_target_tag = 1

#--------------------------------------------------------

ifdef cmt_dictionary_has_target_tag

ifdef READONLY
cmt_local_tagfile_dictionary = /tmp/CMT_$(nd280AnalysisTools_tag)_dictionary.make$(cmt_lock_pid)
cmt_final_setup_dictionary = /tmp/CMT_nd280AnalysisTools_dictionarysetup.make
cmt_local_dictionary_makefile = /tmp/CMT_dictionary$(cmt_lock_pid).make
else
#cmt_local_tagfile_dictionary = $(nd280AnalysisTools_tag)_dictionary.make
cmt_local_tagfile_dictionary = $(bin)$(nd280AnalysisTools_tag)_dictionary.make
cmt_final_setup_dictionary = $(bin)nd280AnalysisTools_dictionarysetup.make
cmt_local_dictionary_makefile = $(bin)dictionary.make
endif

dictionary_extratags = -tag_add=target_dictionary

#$(cmt_local_tagfile_dictionary) : $(cmt_lock_setup)
ifndef QUICK
$(cmt_local_tagfile_dictionary) ::
else
$(cmt_local_tagfile_dictionary) :
endif
	$(echo) "(constituents.make) Rebuilding setup.make $(cmt_local_tagfile_dictionary)"
	@if test -f $(cmt_local_tagfile_dictionary); then /bin/rm -f $(cmt_local_tagfile_dictionary); fi ; \
	  $(cmtexe) -tag=$(tags) $(dictionary_extratags) build tag_makefile >>$(cmt_local_tagfile_dictionary); \
	  if test -f $(cmt_final_setup_dictionary); then /bin/rm -f $(cmt_final_setup_dictionary); fi; \
	  $(cmtexe) -tag=$(tags) $(dictionary_extratags) show setup >>$(cmt_final_setup_dictionary)
	$(echo) setup.make ok

else

ifdef READONLY
cmt_local_tagfile_dictionary = /tmp/CMT_$(nd280AnalysisTools_tag).make$(cmt_lock_pid)
cmt_final_setup_dictionary = /tmp/CMT_nd280AnalysisToolssetup.make
cmt_local_dictionary_makefile = /tmp/CMT_dictionary$(cmt_lock_pid).make
else
#cmt_local_tagfile_dictionary = $(nd280AnalysisTools_tag).make
cmt_local_tagfile_dictionary = $(bin)$(nd280AnalysisTools_tag).make
cmt_final_setup_dictionary = $(bin)nd280AnalysisToolssetup.make
cmt_local_dictionary_makefile = $(bin)dictionary.make
endif

endif

ifndef QUICK
$(cmt_local_dictionary_makefile) :: $(dictionary_dependencies) $(cmt_local_tagfile_dictionary) build_library_links dirs
else
$(cmt_local_dictionary_makefile) :: $(cmt_local_tagfile_dictionary)
endif
	$(echo) "(constituents.make) Building dictionary.make"; \
	  $(cmtexe) -tag=$(tags) $(dictionary_extratags) build constituent_makefile -out=$(cmt_local_dictionary_makefile) dictionary

dictionary :: $(dictionary_dependencies) $(cmt_local_dictionary_makefile)
	$(echo) "(constituents.make) Creating dictionary${lock_suffix} and Starting dictionary"
	@${lock_command} dictionary${lock_suffix} || exit $$?; \
	  retval=$$?; \
	  trap '${unlock_command} dictionary${lock_suffix}; exit $${retval}' 1 2 15; \
	  $(MAKE) -f $(cmt_local_dictionary_makefile) cmt_lock_pid=$${cmt_lock_pid} dictionary; \
	  retval=$$?; ${unlock_command} dictionary${lock_suffix}; exit $${retval}
	$(echo) "(constituents.make) dictionary done"

clean :: dictionaryclean

dictionaryclean :: $(dictionaryclean_dependencies) ##$(cmt_local_dictionary_makefile)
	$(echo) "(constituents.make) Starting dictionaryclean"
	@-if test -f $(cmt_local_dictionary_makefile); then \
	  $(MAKE) -f $(cmt_local_dictionary_makefile) cmt_lock_pid=$${cmt_lock_pid} dictionaryclean; \
	fi

##	  /bin/rm -f $(cmt_local_dictionary_makefile) $(bin)dictionary_dependencies.make

install :: dictionaryinstall

dictionaryinstall :: $(dictionary_dependencies) $(cmt_local_dictionary_makefile)
	$(echo) "(constituents.make) Starting install dictionary"
	@-$(MAKE) -f $(cmt_local_dictionary_makefile) cmt_lock_pid=$${cmt_lock_pid} install
	$(echo) "(constituents.make) install dictionary done"

uninstall :: dictionaryuninstall

dictionaryuninstall :: $(cmt_local_dictionary_makefile)
	$(echo) "(constituents.make) Starting uninstall dictionary"
	@-$(MAKE) -f $(cmt_local_dictionary_makefile) cmt_lock_pid=$${cmt_lock_pid} uninstall
	$(echo) "(constituents.make) uninstall dictionary done"

ifndef PEDANTIC
.DEFAULT::
	$(echo) "(constituents.make) Starting $@ dictionary"
	$(echo) Using default action for $@
	$(echo) "(constituents.make) $@ dictionary done"
endif


#-- end of constituent_lock ------
#-- start of constituent ------

cmt_atEveDisplay_has_no_target_tag = 1

#--------------------------------------------------------

ifdef cmt_atEveDisplay_has_target_tag

ifdef READONLY
cmt_local_tagfile_atEveDisplay = /tmp/CMT_$(nd280AnalysisTools_tag)_atEveDisplay.make$(cmt_lock_pid)
cmt_final_setup_atEveDisplay = /tmp/CMT_nd280AnalysisTools_atEveDisplaysetup.make
cmt_local_atEveDisplay_makefile = /tmp/CMT_atEveDisplay$(cmt_lock_pid).make
else
#cmt_local_tagfile_atEveDisplay = $(nd280AnalysisTools_tag)_atEveDisplay.make
cmt_local_tagfile_atEveDisplay = $(bin)$(nd280AnalysisTools_tag)_atEveDisplay.make
cmt_final_setup_atEveDisplay = $(bin)nd280AnalysisTools_atEveDisplaysetup.make
cmt_local_atEveDisplay_makefile = $(bin)atEveDisplay.make
endif

atEveDisplay_extratags = -tag_add=target_atEveDisplay

#$(cmt_local_tagfile_atEveDisplay) : $(cmt_lock_setup)
ifndef QUICK
$(cmt_local_tagfile_atEveDisplay) ::
else
$(cmt_local_tagfile_atEveDisplay) :
endif
	$(echo) "(constituents.make) Rebuilding setup.make $(cmt_local_tagfile_atEveDisplay)"
	@if test -f $(cmt_local_tagfile_atEveDisplay); then /bin/rm -f $(cmt_local_tagfile_atEveDisplay); fi ; \
	  $(cmtexe) -tag=$(tags) $(atEveDisplay_extratags) build tag_makefile >>$(cmt_local_tagfile_atEveDisplay); \
	  if test -f $(cmt_final_setup_atEveDisplay); then /bin/rm -f $(cmt_final_setup_atEveDisplay); fi; \
	  $(cmtexe) -tag=$(tags) $(atEveDisplay_extratags) show setup >>$(cmt_final_setup_atEveDisplay)
	$(echo) setup.make ok

else

ifdef READONLY
cmt_local_tagfile_atEveDisplay = /tmp/CMT_$(nd280AnalysisTools_tag).make$(cmt_lock_pid)
cmt_final_setup_atEveDisplay = /tmp/CMT_nd280AnalysisToolssetup.make
cmt_local_atEveDisplay_makefile = /tmp/CMT_atEveDisplay$(cmt_lock_pid).make
else
#cmt_local_tagfile_atEveDisplay = $(nd280AnalysisTools_tag).make
cmt_local_tagfile_atEveDisplay = $(bin)$(nd280AnalysisTools_tag).make
cmt_final_setup_atEveDisplay = $(bin)nd280AnalysisToolssetup.make
cmt_local_atEveDisplay_makefile = $(bin)atEveDisplay.make
endif

endif

ifndef QUICK
$(cmt_local_atEveDisplay_makefile) :: $(atEveDisplay_dependencies) $(cmt_local_tagfile_atEveDisplay) build_library_links dirs
else
$(cmt_local_atEveDisplay_makefile) :: $(cmt_local_tagfile_atEveDisplay)
endif
	$(echo) "(constituents.make) Building atEveDisplay.make"; \
	  $(cmtexe) -tag=$(tags) $(atEveDisplay_extratags) build constituent_makefile -out=$(cmt_local_atEveDisplay_makefile) atEveDisplay

atEveDisplay :: $(atEveDisplay_dependencies) $(cmt_local_atEveDisplay_makefile)
	$(echo) "(constituents.make) Starting atEveDisplay"
	@$(MAKE) -f $(cmt_local_atEveDisplay_makefile) cmt_lock_pid=$${cmt_lock_pid} atEveDisplay
	$(echo) "(constituents.make) atEveDisplay done"

clean :: atEveDisplayclean

atEveDisplayclean :: $(atEveDisplayclean_dependencies) ##$(cmt_local_atEveDisplay_makefile)
	$(echo) "(constituents.make) Starting atEveDisplayclean"
	@-if test -f $(cmt_local_atEveDisplay_makefile); then \
	  $(MAKE) -f $(cmt_local_atEveDisplay_makefile) cmt_lock_pid=$${cmt_lock_pid} atEveDisplayclean; \
	fi

##	  /bin/rm -f $(cmt_local_atEveDisplay_makefile) $(bin)atEveDisplay_dependencies.make

install :: atEveDisplayinstall

atEveDisplayinstall :: $(atEveDisplay_dependencies) $(cmt_local_atEveDisplay_makefile)
	$(echo) "(constituents.make) Starting install atEveDisplay"
	@-$(MAKE) -f $(cmt_local_atEveDisplay_makefile) cmt_lock_pid=$${cmt_lock_pid} install
	$(echo) "(constituents.make) install atEveDisplay done"

uninstall :: atEveDisplayuninstall

atEveDisplayuninstall :: $(cmt_local_atEveDisplay_makefile)
	$(echo) "(constituents.make) Starting uninstall atEveDisplay"
	@-$(MAKE) -f $(cmt_local_atEveDisplay_makefile) cmt_lock_pid=$${cmt_lock_pid} uninstall
	$(echo) "(constituents.make) uninstall atEveDisplay done"

ifndef PEDANTIC
.DEFAULT::
	$(echo) "(constituents.make) Starting $@ atEveDisplay"
	$(echo) Using default action for $@
	$(echo) "(constituents.make) $@ atEveDisplay done"
endif


#-- end of constituent ------
#-- start of constituent ------

cmt_AnaToolsEveDisplay_has_target_tag = 1

#--------------------------------------------------------

ifdef cmt_AnaToolsEveDisplay_has_target_tag

ifdef READONLY
cmt_local_tagfile_AnaToolsEveDisplay = /tmp/CMT_$(nd280AnalysisTools_tag)_AnaToolsEveDisplay.make$(cmt_lock_pid)
cmt_final_setup_AnaToolsEveDisplay = /tmp/CMT_nd280AnalysisTools_AnaToolsEveDisplaysetup.make
cmt_local_AnaToolsEveDisplay_makefile = /tmp/CMT_AnaToolsEveDisplay$(cmt_lock_pid).make
else
#cmt_local_tagfile_AnaToolsEveDisplay = $(nd280AnalysisTools_tag)_AnaToolsEveDisplay.make
cmt_local_tagfile_AnaToolsEveDisplay = $(bin)$(nd280AnalysisTools_tag)_AnaToolsEveDisplay.make
cmt_final_setup_AnaToolsEveDisplay = $(bin)nd280AnalysisTools_AnaToolsEveDisplaysetup.make
cmt_local_AnaToolsEveDisplay_makefile = $(bin)AnaToolsEveDisplay.make
endif

AnaToolsEveDisplay_extratags = -tag_add=target_AnaToolsEveDisplay

#$(cmt_local_tagfile_AnaToolsEveDisplay) : $(cmt_lock_setup)
ifndef QUICK
$(cmt_local_tagfile_AnaToolsEveDisplay) ::
else
$(cmt_local_tagfile_AnaToolsEveDisplay) :
endif
	$(echo) "(constituents.make) Rebuilding setup.make $(cmt_local_tagfile_AnaToolsEveDisplay)"
	@if test -f $(cmt_local_tagfile_AnaToolsEveDisplay); then /bin/rm -f $(cmt_local_tagfile_AnaToolsEveDisplay); fi ; \
	  $(cmtexe) -tag=$(tags) $(AnaToolsEveDisplay_extratags) build tag_makefile >>$(cmt_local_tagfile_AnaToolsEveDisplay); \
	  if test -f $(cmt_final_setup_AnaToolsEveDisplay); then /bin/rm -f $(cmt_final_setup_AnaToolsEveDisplay); fi; \
	  $(cmtexe) -tag=$(tags) $(AnaToolsEveDisplay_extratags) show setup >>$(cmt_final_setup_AnaToolsEveDisplay)
	$(echo) setup.make ok

else

ifdef READONLY
cmt_local_tagfile_AnaToolsEveDisplay = /tmp/CMT_$(nd280AnalysisTools_tag).make$(cmt_lock_pid)
cmt_final_setup_AnaToolsEveDisplay = /tmp/CMT_nd280AnalysisToolssetup.make
cmt_local_AnaToolsEveDisplay_makefile = /tmp/CMT_AnaToolsEveDisplay$(cmt_lock_pid).make
else
#cmt_local_tagfile_AnaToolsEveDisplay = $(nd280AnalysisTools_tag).make
cmt_local_tagfile_AnaToolsEveDisplay = $(bin)$(nd280AnalysisTools_tag).make
cmt_final_setup_AnaToolsEveDisplay = $(bin)nd280AnalysisToolssetup.make
cmt_local_AnaToolsEveDisplay_makefile = $(bin)AnaToolsEveDisplay.make
endif

endif

ifndef QUICK
$(cmt_local_AnaToolsEveDisplay_makefile) :: $(AnaToolsEveDisplay_dependencies) $(cmt_local_tagfile_AnaToolsEveDisplay) build_library_links dirs
else
$(cmt_local_AnaToolsEveDisplay_makefile) :: $(cmt_local_tagfile_AnaToolsEveDisplay)
endif
	$(echo) "(constituents.make) Building AnaToolsEveDisplay.make"; \
	  $(cmtexe) -tag=$(tags) $(AnaToolsEveDisplay_extratags) build constituent_makefile -out=$(cmt_local_AnaToolsEveDisplay_makefile) AnaToolsEveDisplay

AnaToolsEveDisplay :: $(AnaToolsEveDisplay_dependencies) $(cmt_local_AnaToolsEveDisplay_makefile)
	$(echo) "(constituents.make) Starting AnaToolsEveDisplay"
	@$(MAKE) -f $(cmt_local_AnaToolsEveDisplay_makefile) cmt_lock_pid=$${cmt_lock_pid} AnaToolsEveDisplay
	$(echo) "(constituents.make) AnaToolsEveDisplay done"

clean :: AnaToolsEveDisplayclean

AnaToolsEveDisplayclean :: $(AnaToolsEveDisplayclean_dependencies) ##$(cmt_local_AnaToolsEveDisplay_makefile)
	$(echo) "(constituents.make) Starting AnaToolsEveDisplayclean"
	@-if test -f $(cmt_local_AnaToolsEveDisplay_makefile); then \
	  $(MAKE) -f $(cmt_local_AnaToolsEveDisplay_makefile) cmt_lock_pid=$${cmt_lock_pid} AnaToolsEveDisplayclean; \
	fi

##	  /bin/rm -f $(cmt_local_AnaToolsEveDisplay_makefile) $(bin)AnaToolsEveDisplay_dependencies.make

install :: AnaToolsEveDisplayinstall

AnaToolsEveDisplayinstall :: $(AnaToolsEveDisplay_dependencies) $(cmt_local_AnaToolsEveDisplay_makefile)
	$(echo) "(constituents.make) Starting install AnaToolsEveDisplay"
	@-$(MAKE) -f $(cmt_local_AnaToolsEveDisplay_makefile) cmt_lock_pid=$${cmt_lock_pid} install
	$(echo) "(constituents.make) install AnaToolsEveDisplay done"

uninstall :: AnaToolsEveDisplayuninstall

AnaToolsEveDisplayuninstall :: $(cmt_local_AnaToolsEveDisplay_makefile)
	$(echo) "(constituents.make) Starting uninstall AnaToolsEveDisplay"
	@-$(MAKE) -f $(cmt_local_AnaToolsEveDisplay_makefile) cmt_lock_pid=$${cmt_lock_pid} uninstall
	$(echo) "(constituents.make) uninstall AnaToolsEveDisplay done"

ifndef PEDANTIC
.DEFAULT::
	$(echo) "(constituents.make) Starting $@ AnaToolsEveDisplay"
	$(echo) Using default action for $@
	$(echo) "(constituents.make) $@ AnaToolsEveDisplay done"
endif


#-- end of constituent ------
#-- start of constituent_lock ------

cmt_doxygen_has_no_target_tag = 1

#--------------------------------------------------------

ifdef cmt_doxygen_has_target_tag

ifdef READONLY
cmt_local_tagfile_doxygen = /tmp/CMT_$(nd280AnalysisTools_tag)_doxygen.make$(cmt_lock_pid)
cmt_final_setup_doxygen = /tmp/CMT_nd280AnalysisTools_doxygensetup.make
cmt_local_doxygen_makefile = /tmp/CMT_doxygen$(cmt_lock_pid).make
else
#cmt_local_tagfile_doxygen = $(nd280AnalysisTools_tag)_doxygen.make
cmt_local_tagfile_doxygen = $(bin)$(nd280AnalysisTools_tag)_doxygen.make
cmt_final_setup_doxygen = $(bin)nd280AnalysisTools_doxygensetup.make
cmt_local_doxygen_makefile = $(bin)doxygen.make
endif

doxygen_extratags = -tag_add=target_doxygen

#$(cmt_local_tagfile_doxygen) : $(cmt_lock_setup)
ifndef QUICK
$(cmt_local_tagfile_doxygen) ::
else
$(cmt_local_tagfile_doxygen) :
endif
	$(echo) "(constituents.make) Rebuilding setup.make $(cmt_local_tagfile_doxygen)"
	@if test -f $(cmt_local_tagfile_doxygen); then /bin/rm -f $(cmt_local_tagfile_doxygen); fi ; \
	  $(cmtexe) -tag=$(tags) $(doxygen_extratags) build tag_makefile >>$(cmt_local_tagfile_doxygen); \
	  if test -f $(cmt_final_setup_doxygen); then /bin/rm -f $(cmt_final_setup_doxygen); fi; \
	  $(cmtexe) -tag=$(tags) $(doxygen_extratags) show setup >>$(cmt_final_setup_doxygen)
	$(echo) setup.make ok

else

ifdef READONLY
cmt_local_tagfile_doxygen = /tmp/CMT_$(nd280AnalysisTools_tag).make$(cmt_lock_pid)
cmt_final_setup_doxygen = /tmp/CMT_nd280AnalysisToolssetup.make
cmt_local_doxygen_makefile = /tmp/CMT_doxygen$(cmt_lock_pid).make
else
#cmt_local_tagfile_doxygen = $(nd280AnalysisTools_tag).make
cmt_local_tagfile_doxygen = $(bin)$(nd280AnalysisTools_tag).make
cmt_final_setup_doxygen = $(bin)nd280AnalysisToolssetup.make
cmt_local_doxygen_makefile = $(bin)doxygen.make
endif

endif

ifndef QUICK
$(cmt_local_doxygen_makefile) :: $(doxygen_dependencies) $(cmt_local_tagfile_doxygen) build_library_links dirs
else
$(cmt_local_doxygen_makefile) :: $(cmt_local_tagfile_doxygen)
endif
	$(echo) "(constituents.make) Building doxygen.make"; \
	  $(cmtexe) -tag=$(tags) $(doxygen_extratags) build constituent_makefile -out=$(cmt_local_doxygen_makefile) doxygen

doxygen :: $(doxygen_dependencies) $(cmt_local_doxygen_makefile)
	$(echo) "(constituents.make) Creating doxygen${lock_suffix} and Starting doxygen"
	@${lock_command} doxygen${lock_suffix} || exit $$?; \
	  retval=$$?; \
	  trap '${unlock_command} doxygen${lock_suffix}; exit $${retval}' 1 2 15; \
	  $(MAKE) -f $(cmt_local_doxygen_makefile) cmt_lock_pid=$${cmt_lock_pid} doxygen; \
	  retval=$$?; ${unlock_command} doxygen${lock_suffix}; exit $${retval}
	$(echo) "(constituents.make) doxygen done"

clean :: doxygenclean

doxygenclean :: $(doxygenclean_dependencies) ##$(cmt_local_doxygen_makefile)
	$(echo) "(constituents.make) Starting doxygenclean"
	@-if test -f $(cmt_local_doxygen_makefile); then \
	  $(MAKE) -f $(cmt_local_doxygen_makefile) cmt_lock_pid=$${cmt_lock_pid} doxygenclean; \
	fi

##	  /bin/rm -f $(cmt_local_doxygen_makefile) $(bin)doxygen_dependencies.make

install :: doxygeninstall

doxygeninstall :: $(doxygen_dependencies) $(cmt_local_doxygen_makefile)
	$(echo) "(constituents.make) Starting install doxygen"
	@-$(MAKE) -f $(cmt_local_doxygen_makefile) cmt_lock_pid=$${cmt_lock_pid} install
	$(echo) "(constituents.make) install doxygen done"

uninstall :: doxygenuninstall

doxygenuninstall :: $(cmt_local_doxygen_makefile)
	$(echo) "(constituents.make) Starting uninstall doxygen"
	@-$(MAKE) -f $(cmt_local_doxygen_makefile) cmt_lock_pid=$${cmt_lock_pid} uninstall
	$(echo) "(constituents.make) uninstall doxygen done"

ifndef PEDANTIC
.DEFAULT::
	$(echo) "(constituents.make) Starting $@ doxygen"
	$(echo) Using default action for $@
	$(echo) "(constituents.make) $@ doxygen done"
endif


#-- end of constituent_lock ------
#-- start of constituent_lock ------

cmt_nd280AnalysisTools_has_no_target_tag = 1

#--------------------------------------------------------

ifdef cmt_nd280AnalysisTools_has_target_tag

ifdef READONLY
cmt_local_tagfile_nd280AnalysisTools = /tmp/CMT_$(nd280AnalysisTools_tag)_nd280AnalysisTools.make$(cmt_lock_pid)
cmt_final_setup_nd280AnalysisTools = /tmp/CMT_nd280AnalysisTools_nd280AnalysisToolssetup.make
cmt_local_nd280AnalysisTools_makefile = /tmp/CMT_nd280AnalysisTools$(cmt_lock_pid).make
else
#cmt_local_tagfile_nd280AnalysisTools = $(nd280AnalysisTools_tag)_nd280AnalysisTools.make
cmt_local_tagfile_nd280AnalysisTools = $(bin)$(nd280AnalysisTools_tag)_nd280AnalysisTools.make
cmt_final_setup_nd280AnalysisTools = $(bin)nd280AnalysisTools_nd280AnalysisToolssetup.make
cmt_local_nd280AnalysisTools_makefile = $(bin)nd280AnalysisTools.make
endif

nd280AnalysisTools_extratags = -tag_add=target_nd280AnalysisTools

#$(cmt_local_tagfile_nd280AnalysisTools) : $(cmt_lock_setup)
ifndef QUICK
$(cmt_local_tagfile_nd280AnalysisTools) ::
else
$(cmt_local_tagfile_nd280AnalysisTools) :
endif
	$(echo) "(constituents.make) Rebuilding setup.make $(cmt_local_tagfile_nd280AnalysisTools)"
	@if test -f $(cmt_local_tagfile_nd280AnalysisTools); then /bin/rm -f $(cmt_local_tagfile_nd280AnalysisTools); fi ; \
	  $(cmtexe) -tag=$(tags) $(nd280AnalysisTools_extratags) build tag_makefile >>$(cmt_local_tagfile_nd280AnalysisTools); \
	  if test -f $(cmt_final_setup_nd280AnalysisTools); then /bin/rm -f $(cmt_final_setup_nd280AnalysisTools); fi; \
	  $(cmtexe) -tag=$(tags) $(nd280AnalysisTools_extratags) show setup >>$(cmt_final_setup_nd280AnalysisTools)
	$(echo) setup.make ok

else

ifdef READONLY
cmt_local_tagfile_nd280AnalysisTools = /tmp/CMT_$(nd280AnalysisTools_tag).make$(cmt_lock_pid)
cmt_final_setup_nd280AnalysisTools = /tmp/CMT_nd280AnalysisToolssetup.make
cmt_local_nd280AnalysisTools_makefile = /tmp/CMT_nd280AnalysisTools$(cmt_lock_pid).make
else
#cmt_local_tagfile_nd280AnalysisTools = $(nd280AnalysisTools_tag).make
cmt_local_tagfile_nd280AnalysisTools = $(bin)$(nd280AnalysisTools_tag).make
cmt_final_setup_nd280AnalysisTools = $(bin)nd280AnalysisToolssetup.make
cmt_local_nd280AnalysisTools_makefile = $(bin)nd280AnalysisTools.make
endif

endif

ifndef QUICK
$(cmt_local_nd280AnalysisTools_makefile) :: $(nd280AnalysisTools_dependencies) $(cmt_local_tagfile_nd280AnalysisTools) build_library_links dirs
else
$(cmt_local_nd280AnalysisTools_makefile) :: $(cmt_local_tagfile_nd280AnalysisTools)
endif
	$(echo) "(constituents.make) Building nd280AnalysisTools.make"; \
	  $(cmtexe) -tag=$(tags) $(nd280AnalysisTools_extratags) build constituent_makefile -out=$(cmt_local_nd280AnalysisTools_makefile) nd280AnalysisTools

nd280AnalysisTools :: $(nd280AnalysisTools_dependencies) $(cmt_local_nd280AnalysisTools_makefile)
	$(echo) "(constituents.make) Creating nd280AnalysisTools${lock_suffix} and Starting nd280AnalysisTools"
	@${lock_command} nd280AnalysisTools${lock_suffix} || exit $$?; \
	  retval=$$?; \
	  trap '${unlock_command} nd280AnalysisTools${lock_suffix}; exit $${retval}' 1 2 15; \
	  $(MAKE) -f $(cmt_local_nd280AnalysisTools_makefile) cmt_lock_pid=$${cmt_lock_pid} nd280AnalysisTools; \
	  retval=$$?; ${unlock_command} nd280AnalysisTools${lock_suffix}; exit $${retval}
	$(echo) "(constituents.make) nd280AnalysisTools done"

clean :: nd280AnalysisToolsclean

nd280AnalysisToolsclean :: $(nd280AnalysisToolsclean_dependencies) ##$(cmt_local_nd280AnalysisTools_makefile)
	$(echo) "(constituents.make) Starting nd280AnalysisToolsclean"
	@-if test -f $(cmt_local_nd280AnalysisTools_makefile); then \
	  $(MAKE) -f $(cmt_local_nd280AnalysisTools_makefile) cmt_lock_pid=$${cmt_lock_pid} nd280AnalysisToolsclean; \
	fi

##	  /bin/rm -f $(cmt_local_nd280AnalysisTools_makefile) $(bin)nd280AnalysisTools_dependencies.make

install :: nd280AnalysisToolsinstall

nd280AnalysisToolsinstall :: $(nd280AnalysisTools_dependencies) $(cmt_local_nd280AnalysisTools_makefile)
	$(echo) "(constituents.make) Starting install nd280AnalysisTools"
	@-$(MAKE) -f $(cmt_local_nd280AnalysisTools_makefile) cmt_lock_pid=$${cmt_lock_pid} install
	$(echo) "(constituents.make) install nd280AnalysisTools done"

uninstall :: nd280AnalysisToolsuninstall

nd280AnalysisToolsuninstall :: $(cmt_local_nd280AnalysisTools_makefile)
	$(echo) "(constituents.make) Starting uninstall nd280AnalysisTools"
	@-$(MAKE) -f $(cmt_local_nd280AnalysisTools_makefile) cmt_lock_pid=$${cmt_lock_pid} uninstall
	$(echo) "(constituents.make) uninstall nd280AnalysisTools done"

ifndef PEDANTIC
.DEFAULT::
	$(echo) "(constituents.make) Starting $@ nd280AnalysisTools"
	$(echo) Using default action for $@
	$(echo) "(constituents.make) $@ nd280AnalysisTools done"
endif


#-- end of constituent_lock ------
#-- start of constituent_lock ------

cmt_make_has_target_tag = 1

#--------------------------------------------------------

ifdef cmt_make_has_target_tag

ifdef READONLY
cmt_local_tagfile_make = /tmp/CMT_$(nd280AnalysisTools_tag)_make.make$(cmt_lock_pid)
cmt_final_setup_make = /tmp/CMT_nd280AnalysisTools_makesetup.make
cmt_local_make_makefile = /tmp/CMT_make$(cmt_lock_pid).make
else
#cmt_local_tagfile_make = $(nd280AnalysisTools_tag)_make.make
cmt_local_tagfile_make = $(bin)$(nd280AnalysisTools_tag)_make.make
cmt_final_setup_make = $(bin)nd280AnalysisTools_makesetup.make
cmt_local_make_makefile = $(bin)make.make
endif

make_extratags = -tag_add=target_make

#$(cmt_local_tagfile_make) : $(cmt_lock_setup)
ifndef QUICK
$(cmt_local_tagfile_make) ::
else
$(cmt_local_tagfile_make) :
endif
	$(echo) "(constituents.make) Rebuilding setup.make $(cmt_local_tagfile_make)"
	@if test -f $(cmt_local_tagfile_make); then /bin/rm -f $(cmt_local_tagfile_make); fi ; \
	  $(cmtexe) -tag=$(tags) $(make_extratags) build tag_makefile >>$(cmt_local_tagfile_make); \
	  if test -f $(cmt_final_setup_make); then /bin/rm -f $(cmt_final_setup_make); fi; \
	  $(cmtexe) -tag=$(tags) $(make_extratags) show setup >>$(cmt_final_setup_make)
	$(echo) setup.make ok

else

ifdef READONLY
cmt_local_tagfile_make = /tmp/CMT_$(nd280AnalysisTools_tag).make$(cmt_lock_pid)
cmt_final_setup_make = /tmp/CMT_nd280AnalysisToolssetup.make
cmt_local_make_makefile = /tmp/CMT_make$(cmt_lock_pid).make
else
#cmt_local_tagfile_make = $(nd280AnalysisTools_tag).make
cmt_local_tagfile_make = $(bin)$(nd280AnalysisTools_tag).make
cmt_final_setup_make = $(bin)nd280AnalysisToolssetup.make
cmt_local_make_makefile = $(bin)make.make
endif

endif

ifndef QUICK
$(cmt_local_make_makefile) :: $(make_dependencies) $(cmt_local_tagfile_make) build_library_links dirs
else
$(cmt_local_make_makefile) :: $(cmt_local_tagfile_make)
endif
	$(echo) "(constituents.make) Building make.make"; \
	  $(cmtexe) -tag=$(tags) $(make_extratags) build constituent_makefile -out=$(cmt_local_make_makefile) make

make :: $(make_dependencies) $(cmt_local_make_makefile)
	$(echo) "(constituents.make) Creating make${lock_suffix} and Starting make"
	@${lock_command} make${lock_suffix} || exit $$?; \
	  retval=$$?; \
	  trap '${unlock_command} make${lock_suffix}; exit $${retval}' 1 2 15; \
	  $(MAKE) -f $(cmt_local_make_makefile) cmt_lock_pid=$${cmt_lock_pid} make; \
	  retval=$$?; ${unlock_command} make${lock_suffix}; exit $${retval}
	$(echo) "(constituents.make) make done"

clean :: makeclean

makeclean :: $(makeclean_dependencies) ##$(cmt_local_make_makefile)
	$(echo) "(constituents.make) Starting makeclean"
	@-if test -f $(cmt_local_make_makefile); then \
	  $(MAKE) -f $(cmt_local_make_makefile) cmt_lock_pid=$${cmt_lock_pid} makeclean; \
	fi

##	  /bin/rm -f $(cmt_local_make_makefile) $(bin)make_dependencies.make

install :: makeinstall

makeinstall :: $(make_dependencies) $(cmt_local_make_makefile)
	$(echo) "(constituents.make) Starting install make"
	@-$(MAKE) -f $(cmt_local_make_makefile) cmt_lock_pid=$${cmt_lock_pid} install
	$(echo) "(constituents.make) install make done"

uninstall :: makeuninstall

makeuninstall :: $(cmt_local_make_makefile)
	$(echo) "(constituents.make) Starting uninstall make"
	@-$(MAKE) -f $(cmt_local_make_makefile) cmt_lock_pid=$${cmt_lock_pid} uninstall
	$(echo) "(constituents.make) uninstall make done"

ifndef PEDANTIC
.DEFAULT::
	$(echo) "(constituents.make) Starting $@ make"
	$(echo) Using default action for $@
	$(echo) "(constituents.make) $@ make done"
endif


#-- end of constituent_lock ------
#-- start of constituent_lock ------

cmt_analysisTools_has_target_tag = 1

#--------------------------------------------------------

ifdef cmt_analysisTools_has_target_tag

ifdef READONLY
cmt_local_tagfile_analysisTools = /tmp/CMT_$(nd280AnalysisTools_tag)_analysisTools.make$(cmt_lock_pid)
cmt_final_setup_analysisTools = /tmp/CMT_nd280AnalysisTools_analysisToolssetup.make
cmt_local_analysisTools_makefile = /tmp/CMT_analysisTools$(cmt_lock_pid).make
else
#cmt_local_tagfile_analysisTools = $(nd280AnalysisTools_tag)_analysisTools.make
cmt_local_tagfile_analysisTools = $(bin)$(nd280AnalysisTools_tag)_analysisTools.make
cmt_final_setup_analysisTools = $(bin)nd280AnalysisTools_analysisToolssetup.make
cmt_local_analysisTools_makefile = $(bin)analysisTools.make
endif

analysisTools_extratags = -tag_add=target_analysisTools

#$(cmt_local_tagfile_analysisTools) : $(cmt_lock_setup)
ifndef QUICK
$(cmt_local_tagfile_analysisTools) ::
else
$(cmt_local_tagfile_analysisTools) :
endif
	$(echo) "(constituents.make) Rebuilding setup.make $(cmt_local_tagfile_analysisTools)"
	@if test -f $(cmt_local_tagfile_analysisTools); then /bin/rm -f $(cmt_local_tagfile_analysisTools); fi ; \
	  $(cmtexe) -tag=$(tags) $(analysisTools_extratags) build tag_makefile >>$(cmt_local_tagfile_analysisTools); \
	  if test -f $(cmt_final_setup_analysisTools); then /bin/rm -f $(cmt_final_setup_analysisTools); fi; \
	  $(cmtexe) -tag=$(tags) $(analysisTools_extratags) show setup >>$(cmt_final_setup_analysisTools)
	$(echo) setup.make ok

else

ifdef READONLY
cmt_local_tagfile_analysisTools = /tmp/CMT_$(nd280AnalysisTools_tag).make$(cmt_lock_pid)
cmt_final_setup_analysisTools = /tmp/CMT_nd280AnalysisToolssetup.make
cmt_local_analysisTools_makefile = /tmp/CMT_analysisTools$(cmt_lock_pid).make
else
#cmt_local_tagfile_analysisTools = $(nd280AnalysisTools_tag).make
cmt_local_tagfile_analysisTools = $(bin)$(nd280AnalysisTools_tag).make
cmt_final_setup_analysisTools = $(bin)nd280AnalysisToolssetup.make
cmt_local_analysisTools_makefile = $(bin)analysisTools.make
endif

endif

ifndef QUICK
$(cmt_local_analysisTools_makefile) :: $(analysisTools_dependencies) $(cmt_local_tagfile_analysisTools) build_library_links dirs
else
$(cmt_local_analysisTools_makefile) :: $(cmt_local_tagfile_analysisTools)
endif
	$(echo) "(constituents.make) Building analysisTools.make"; \
	  $(cmtexe) -tag=$(tags) $(analysisTools_extratags) build constituent_makefile -out=$(cmt_local_analysisTools_makefile) analysisTools

analysisTools :: $(analysisTools_dependencies) $(cmt_local_analysisTools_makefile)
	$(echo) "(constituents.make) Creating analysisTools${lock_suffix} and Starting analysisTools"
	@${lock_command} analysisTools${lock_suffix} || exit $$?; \
	  retval=$$?; \
	  trap '${unlock_command} analysisTools${lock_suffix}; exit $${retval}' 1 2 15; \
	  $(MAKE) -f $(cmt_local_analysisTools_makefile) cmt_lock_pid=$${cmt_lock_pid} analysisTools; \
	  retval=$$?; ${unlock_command} analysisTools${lock_suffix}; exit $${retval}
	$(echo) "(constituents.make) analysisTools done"

clean :: analysisToolsclean

analysisToolsclean :: $(analysisToolsclean_dependencies) ##$(cmt_local_analysisTools_makefile)
	$(echo) "(constituents.make) Starting analysisToolsclean"
	@-if test -f $(cmt_local_analysisTools_makefile); then \
	  $(MAKE) -f $(cmt_local_analysisTools_makefile) cmt_lock_pid=$${cmt_lock_pid} analysisToolsclean; \
	fi

##	  /bin/rm -f $(cmt_local_analysisTools_makefile) $(bin)analysisTools_dependencies.make

install :: analysisToolsinstall

analysisToolsinstall :: $(analysisTools_dependencies) $(cmt_local_analysisTools_makefile)
	$(echo) "(constituents.make) Starting install analysisTools"
	@-$(MAKE) -f $(cmt_local_analysisTools_makefile) cmt_lock_pid=$${cmt_lock_pid} install
	$(echo) "(constituents.make) install analysisTools done"

uninstall :: analysisToolsuninstall

analysisToolsuninstall :: $(cmt_local_analysisTools_makefile)
	$(echo) "(constituents.make) Starting uninstall analysisTools"
	@-$(MAKE) -f $(cmt_local_analysisTools_makefile) cmt_lock_pid=$${cmt_lock_pid} uninstall
	$(echo) "(constituents.make) uninstall analysisTools done"

ifndef PEDANTIC
.DEFAULT::
	$(echo) "(constituents.make) Starting $@ analysisTools"
	$(echo) Using default action for $@
	$(echo) "(constituents.make) $@ analysisTools done"
endif


#-- end of constituent_lock ------
#-- start of constituents_trailer ------

clean :: remove_library_links

remove_library_links ::
	$(echo) "Removing library links"; \
	  $(remove_library_links)

makefilesclean ::

###	@/bin/rm -f checkuses

###	/bin/rm -f *.make*

clean :: makefilesclean

binclean :: clean
	$(echo) "Removing binary directory $(bin)"
	@if test ! "$(bin)" = "./"; then \
	  /bin/rm -rf $(bin); \
	fi

#-- end of constituents_trailer ------
