#-- start of make_header -----------------

#====================================
#  Document nd280AnalysisTools
#
#   Generated Tue Mar 20 16:53:39 2018  by cfrancois
#
#====================================

include ${CMTROOT}/src/Makefile.core

ifdef tag
CMTEXTRATAGS = $(tag)
else
tag       = $(CMTCONFIG)
endif

cmt_nd280AnalysisTools_has_no_target_tag = 1

#--------------------------------------------------------

ifdef cmt_nd280AnalysisTools_has_target_tag

tags      = $(tag),$(CMTEXTRATAGS),target_nd280AnalysisTools

nd280AnalysisTools_tag = $(tag)

ifdef READONLY
cmt_local_tagfile_nd280AnalysisTools = /tmp/CMT_$(nd280AnalysisTools_tag)_nd280AnalysisTools.make$(cmt_lock_pid)
else
#cmt_local_tagfile_nd280AnalysisTools = $(nd280AnalysisTools_tag)_nd280AnalysisTools.make
cmt_local_tagfile_nd280AnalysisTools = $(bin)$(nd280AnalysisTools_tag)_nd280AnalysisTools.make
endif

else

tags      = $(tag),$(CMTEXTRATAGS)

nd280AnalysisTools_tag = $(tag)

ifdef READONLY
cmt_local_tagfile_nd280AnalysisTools = /tmp/CMT_$(nd280AnalysisTools_tag).make$(cmt_lock_pid)
else
#cmt_local_tagfile_nd280AnalysisTools = $(nd280AnalysisTools_tag).make
cmt_local_tagfile_nd280AnalysisTools = $(bin)$(nd280AnalysisTools_tag).make
endif

endif

-include $(cmt_local_tagfile_nd280AnalysisTools)

ifdef cmt_nd280AnalysisTools_has_target_tag

ifdef READONLY
cmt_final_setup_nd280AnalysisTools = /tmp/CMT_nd280AnalysisTools_nd280AnalysisToolssetup.make
cmt_local_nd280AnalysisTools_makefile = /tmp/CMT_nd280AnalysisTools$(cmt_lock_pid).make
else
cmt_final_setup_nd280AnalysisTools = $(bin)nd280AnalysisTools_nd280AnalysisToolssetup.make
cmt_local_nd280AnalysisTools_makefile = $(bin)nd280AnalysisTools.make
endif

else

ifdef READONLY
cmt_final_setup_nd280AnalysisTools = /tmp/CMT_nd280AnalysisToolssetup.make
cmt_local_nd280AnalysisTools_makefile = /tmp/CMT_nd280AnalysisTools$(cmt_lock_pid).make
else
cmt_final_setup_nd280AnalysisTools = $(bin)nd280AnalysisToolssetup.make
cmt_local_nd280AnalysisTools_makefile = $(bin)nd280AnalysisTools.make
endif

endif

ifdef READONLY
cmt_final_setup = /tmp/CMT_nd280AnalysisToolssetup.make
else
cmt_final_setup = $(bin)nd280AnalysisToolssetup.make
endif

nd280AnalysisTools ::


ifdef READONLY
nd280AnalysisTools ::
	@echo tags=$(tags)
	@echo cmt_local_tagfile=$(cmt_local_tagfile)
endif


dirs ::
	@if test ! -r requirements ; then echo "No requirements file" ; fi; \
	  if test ! -d $(bin) ; then $(mkdir) -p $(bin) ; fi

javadirs ::
	@if test ! -d $(javabin) ; then $(mkdir) -p $(javabin) ; fi

srcdirs ::
	@if test ! -d $(src) ; then $(mkdir) -p $(src) ; fi

help ::
	$(echo) 'nd280AnalysisTools'

binobj = 
ifdef STRUCTURED_OUTPUT
binobj = nd280AnalysisTools/
nd280AnalysisTools::
	@if test ! -d $(bin)$(binobj) ; then $(mkdir) -p $(bin)$(binobj) ; fi
	$(echo) "STRUCTURED_OUTPUT="$(bin)$(binobj)
endif

#-- end of make_header ------------------

########################### Start External Header ######################### 
# -*- makefile -*-
# 
# A fragment used by CMT to build the nd280AnalysisTools. This is based
# on the external fragment used to compile packages like ROOT and CLHEP.
#
# This version is different though, as much more functionality happens
# in the header script than the main script. This is because the main
# script is only invoked if CMT thinks there have been changes to the 
# code, and it seems to only look in the src directory. The header
# functions are always invoked, so we call our compile script from
# there and do the checking ourselves in runAnalyses.py.
#
# Usage in the requirements file is:
#    "document anatools <package> <compile script>"

nd280AnalysisTools_output = ../$(tag)

ifndef nd280AnalysisTools_stamps
  ifdef $(package)_stamps
     nd280AnalysisTools_stamps=$($(package)_stamps)
  else
     nd280AnalysisTools_stamps=$(nd280AnalysisTools_output)/nd280AnalysisTools.stamp
  endif
endif

$(nd280AnalysisTools_stamps) ::
	bash $(PACKAGE_ROOT)/src/compile_anatools compile $(PACKAGE_ROOT) $(tag)

nd280AnalysisTools :: $(nd280AnalysisTools_stamps)
	@echo "nd280AnalysisTools OK... " 

########################### End External Header ########################
compile_anatools__dependencies = ../src/compile_anatools
# -*- makefile -*-
#
# A fragment used by CMT to build the nd280AnalysisTools. This is based
# on the external fragment used to compile packages like ROOT and CLHEP.
#
# This version is different though, as much more functionality happens
# in the header script than the main script. This is because the main
# script is only invoked if CMT thinks there have been changes to the 
# code, and it seems to only look in the src directory. The header
# functions are always invoked, so we call our compile script from
# there and do the checking ourselves in runAnalyses.py.
#
# Usage in the requirements file is:
#    "document anatools <package> <compile script>"

$(nd280AnalysisTools_stamps) :: $(src)compile_anatools
	touch $(nd280AnalysisTools_stamps)

nd280AnalysisToolsclean :: 
	bash $(src)compile_anatools clean $(PACKAGE_ROOT) $(tag)
	rm $(nd280AnalysisTools_stamps) || true

clean :: nd280AnalysisToolsclean
#-- start of cleanup_header --------------

clean :: nd280AnalysisToolsclean
	@cd .

ifndef PEDANTIC
.DEFAULT::
	$(echo) "(nd280AnalysisTools.make) $@: No rule for such target" >&2
#	@echo "#CMT> Warning: $@: No rule for such target" >&2; exit
else
.DEFAULT::
	$(echo) "(nd280AnalysisTools.make) PEDANTIC: $@: No rule for such target" >&2
	if test $@ = "$(cmt_final_setup)" -o\
	 $@ = "$(cmt_final_setup_nd280AnalysisTools)" ; then\
	 found=n; for s in 1 2 3 4 5; do\
	 sleep $$s; test ! -f $@ || { found=y; break; }\
	 done; if test $$found = n; then\
	 test -z "$(cmtmsg)" ||\
	 echo "$(CMTMSGPREFIX)" "(nd280AnalysisTools.make) PEDANTIC: $@: Seems to be missing. Ignore it for now" >&2; exit 0 ; fi;\
	 elif test `expr index $@ '/'` -ne 0 ; then\
	 test -z "$(cmtmsg)" ||\
	 echo "$(CMTMSGPREFIX)" "(nd280AnalysisTools.make) PEDANTIC: $@: Seems to be a missing file. Please check" >&2; exit 2 ; \
	 else\
	 test -z "$(cmtmsg)" ||\
	 echo "$(CMTMSGPREFIX)" "(nd280AnalysisTools.make) PEDANTIC: $@: Seems to be a fake target due to some pattern. Just ignore it" >&2 ; exit 0; fi
endif

nd280AnalysisToolsclean ::
#-- end of cleanup_header ---------------
